// Code generated by goctl. DO NOT EDIT.
// Source: exchange.proto

package server

import (
	"context"

	"github.com/otter-trade/go-serve-demo/exchange-rpc/internal/logic"
	"github.com/otter-trade/go-serve-demo/exchange-rpc/internal/svc"
	"github.com/otter-trade/go-serve-demo/exchange-rpc/pb"
)

type ExchangeServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedExchangeServer
}

func NewExchangeServer(svcCtx *svc.ServiceContext) *ExchangeServer {
	return &ExchangeServer{
		svcCtx: svcCtx,
	}
}

// -----------------------管理员-----------------------
func (s *ExchangeServer) AdminAdd(ctx context.Context, in *pb.AdminAddReq) (*pb.AdminAddResp, error) {
	l := logic.NewAdminAddLogic(ctx, s.svcCtx)
	return l.AdminAdd(in)
}

// 更新管理员
func (s *ExchangeServer) AdminUpdate(ctx context.Context, in *pb.AdminUpdateReq) (*pb.AdminUpdateResp, error) {
	l := logic.NewAdminUpdateLogic(ctx, s.svcCtx)
	return l.AdminUpdate(in)
}

// 删除管理员
func (s *ExchangeServer) AdminDelete(ctx context.Context, in *pb.AdminDeleteReq) (*pb.AdminDeleteResp, error) {
	l := logic.NewAdminDeleteLogic(ctx, s.svcCtx)
	return l.AdminDelete(in)
}

// 获取管理员
func (s *ExchangeServer) AdminDetails(ctx context.Context, in *pb.AdminDetailsReq) (*pb.AdminDetailsResp, error) {
	l := logic.NewAdminDetailsLogic(ctx, s.svcCtx)
	return l.AdminDetails(in)
}

// 管理员列表
func (s *ExchangeServer) AdminSearch(ctx context.Context, in *pb.AdminSearchReq) (*pb.AdminSearchResp, error) {
	l := logic.NewAdminSearchLogic(ctx, s.svcCtx)
	return l.AdminSearch(in)
}
